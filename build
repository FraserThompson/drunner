#!/bin/bash

MYDIR=$( dirname "$(readlink -f "$0")" )
PERMISSIONSFILE="${MYDIR}/.permissions"

DRUNNER="${HOME}/.drunner/bin/drunner"

VERSIONSTR="0.7 r"
VERSIONDATE="2016-07-05"
VSHORT="NOT SET"
VCOMBO="NOT SET"
DEBUG=""
[ -v VTAG ] || VTAG="Dev"

IMAGE=drunner/drunner_build

function showhelp {
cat <<EOF >&2

NAME
   build

SYNOPSIS
   build
      Build drunner using docker container for compilation and linking.

   build clean
      Remove intermediate files then build.

   build install
      Build then install for testing (to ~/test).

DESCRIPTION
   dRunner's test harness. Built from ${IMAGENAME}.

EOF
}

function runbuild {
   OUTPUT="${MYDIR}/source/drunner"
   rm -f ${OUTPUT}

   BUILDOBJ="${MYDIR}/source/source/buildnum.o"
   rm -f "${BUILDOBJ}"

   SECONDS=$(( $(date +%s) - $(date --date="${VERSIONDATE}" +%s) ))
   DAYS=$(( 1+${SECONDS}/(60*60*24) ))
   DATE=`date`
   VSHORT="${VERSIONSTR}${DAYS}"
   VCOMBO="${VSHORT} - ${DATE} [${VTAG}]"

   echo "Building ${VCOMBO}"
   echo "Mapping ${SRC} to /source"
   docker run --rm \
      -e "VCOMBO=${VCOMBO}" \
      -e "VSHORT=${VSHORT}" \
      -e "DEBUG=${DEBUG}"   \
      -v "${SRC}:/source" "${IMAGE}" \
      /bin/bash -c "make"

   [ -f ${OUTPUT} ] || { echo "Build Failed." ; exit 1 ; }

   ${OUTPUT} -d setup
#   cp ${OUTPUT} ${MYDIR}
#   chmod a+x "${MYDIR}/drunner"
}

function die { echo "$1"; exit 1 ; }

function obliterate {
   "${DRUNNER}" obliterate "${1}"
   if [ $? -eq 1 ] ; then die "Couldn't obliterate ${1}" ; fi
}

function testcontainer {
   echo " "
   echo "-- Testing $1 --"
   "${DRUNNER}" install "${1}" "testcontainer-${1}" || die "Couldn't install ${1}"
   obliterate "testcontainer-${1}"
}

function runcheck {
   cd
   "${DRUNNER}" unittest || die "Unit tests failed"
   testcontainer "helloworld"
   testcontainer "minecraft"
   testcontainer "minimalexample"
}

function makeclean {
   docker run --rm -v "${SRC}:/source" "${IMAGE}" make clean
   rm -f "${MYDIR}/drunner"
   rm -f "$PERMISSIONSFILE"
}


function main {
   SRC=$(echo "${MYDIR}" | sed -e 's|^/cygdrive/\(.\)/|\1:/|g')
   SRC="${SRC}/source"

   COMMAND="build"
   [ $# -eq 0 ] || COMMAND="$1"

   case "$COMMAND" in
      build)
         runbuild
         ;;

      check)
         runcheck
         ;;

      debug)
         DEBUG="-g -D _DEBUG -D POCO_ENABLE_DEBUGGER"
         runbuild
         ;;

      clean)
         makeclean
         ;;

      *)
         showhelp
         ;;
   esac
}

main "$@"
